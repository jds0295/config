#!/usr/bin/env sh

#
# for this to work you must configure sudo such that
# it will be able to run the command without password
#
# see this wiki page for information:
#  - https://github.com/koekeishiya/yabai/wiki/Installing-yabai-(latest-release)#configure-scripting-addition
#
# yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"
# sudo yabai --load-sa
#

# global settings
yabai -m config                                 \
    external_bar                 off:20:0       \
    menubar_opacity              1.0            \
    mouse_follows_focus          off            \
    focus_follows_mouse          off	        \
    display_arrangement_order    default        \
    window_origin_display        default        \
    window_placement             second_child   \
    window_zoom_persist          on             \
    window_shadow                on             \
    window_animation_duration    0.0            \
    window_animation_easing      ease_out_circ  \
    window_opacity_duration      0.0            \
    active_window_opacity        1.0            \
    normal_window_opacity        0.90           \
    window_opacity               off            \
    insert_feedback_color        0xffd75f5f     \
    split_ratio                  0.50           \
    split_type                   auto           \
    auto_balance                 off            \
    top_padding                  01             \
    bottom_padding               01             \
    left_padding                 01             \
    right_padding                01             \
    window_gap                   02             \
    layout                       bsp            \
    mouse_modifier               fn             \
    mouse_action1                move           \
    mouse_action2                resize         \
    mouse_drop_action            swap           

##### Create Spaces and assign apps to spaces
function setup_space {
  local idx="$1"
  local name="$2"
  local space =
  echo "Setup space $idx : $name"
  space =$(yabai -m query --spaces --space "$idx")
  if [ -z "$space" ]; then
    yabai -m space --create
  fi

  yabai -m space "$idx" --label "$name"
}

setup_space 1 browse
setup_space 2 code
setup_space 3 chat

echo "yabai configuration loaded.."

# move some apps automatically to specific spaces
yabai -m rule --add app="^Safari$" space=^1
yabai -m rule --add app="^Firefox$" space=^1
yabai -m rule --add app="^Alacritty$" space=^2
yabai -m rule --add app="^iTerm2$" space=^2
yabai -m rule --add app="^Microsoft Teams.*$" space=^3

# Ignore the following
yabai -m rule --add app="^Calculator$" manage=off		
yabai -m rule --add app="^System Settings$" manage=off		
yabai -m rule --add app="Android.*$" manage=off		
yabai -m rule --add app="qemu.*$" manage=off		

echo "yabai rules added.."

##### Assign Spaces to monitors
assign_spaces_to_monitors() {
  # Get the number of connected displays
  num_displays=$(yabai -m query --displays | grep -c "index")

  case $num_displays in
    1)
      display --layout 1:1
      ;;
    3)
      # yabai -m space 1 --display 1
      # yabai -m space 2 --display 2
      # yabai -m space 3 --display 3
      # ;;
      # Assign spaces to monitors based on index
      display --layout 1:1,2:2,3:3
      *)
      echo "Not a good number of displays: $num_displays"
      ;;
  esac
}
# Subscribe to display change event and call the function
yabai -m signal --add event=display_change action="assign_spaces_to_monitors"

